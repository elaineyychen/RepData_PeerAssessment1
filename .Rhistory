q()
find.packages(devtools)
find.package(devtools)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
help(numeric)
args(plotting)
args(plot)
help(plot)
args(paste)
help(paste)
search()
.GlobalEnv
package:stats
help(unclass)
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
unclass(x)
x$sec
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?runif
?apply
?rowMeans
?rep
rep(1,2)
?rnorm
rnorm(1:5,1:5,2)
rnorm(5,1,2)
noise <- function(n,mean,sd){}
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
?gl
gl(3,10)
f <- gl(3,10)
f
x <- c(rep(1,10),rep(2,10),rep(3,10))
tapply(x,f,mean)
x <- c(rep(2.5,10),rep(2,10),rep(1.3,10))
tapply(x,f,mean)
?cat
mean(x)
mean(xx)
traceback()
?traceback
lm(y-x)
traceback()
clear
library(datasets)
data(iris)
set.seed(1)
rpois(5, 2)
?dnorm
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
plot(x,y)
?plot
library(graphics)
plot(x,y)
x
y
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1 <- 1
x2 <- 2
y <- 3
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
?qpois
demo(graphics)
options()
options(digits=3)
x <- runif(209)
x <- runif(20)
summary(x)
hist(x)
savehistory()
?savehistory
ls
ls()
q()
x <- runif(20)
hist(x)
?contrib
q()
getwd()
setwd("E:\\Dropbox\\study\\CourseRA\\5\\week2\\project1\\RepData_PeerAssessment1")
data <- read.csv("activity.csv")
head(data)
histogram(~data|date)
install.packages("trellis")
library(trellis)
librarys(trellis)
?hist
hist(data)
hist(data$steps)
row(data)
tail(data)
hist(data$steps, breaks=288,xlab="Total number of steps each day")
hist(data$steps, breaks=288,col="red",xlab="Total number of steps each day")
?hist
?ggplot
?ggplot2
install.packages("ggplot2")
library(ggplot2)
ggplot(data,aes(steps,date))
head(data)
?ggplot
ggplot(data,aes(steps,date))
g<-ggplot(data,aes(steps,date))
p <- g+geom_point()
print(p)
?ggplot
class(data)
class(data$steps)
class(data$date)
class(data$interval)
?sum
?dplyr
install.packages("dplyr")
library(dplyr)
by_date <- group_by(data,date)
head(by_date)
by_date
tempdata <- summarise(by_date,
count = n(),
totalstep = sum(steps, na.rm = TRUE))
tempdata
sum(tempdata$totalstep)
tempdata <- summarise(by_date,
count = n(),
totalstep = sum(steps, na.rm = TRUE),)
history()
tempdata
View(tempdata)
View(tempdata)
hist(tempdata)
hist(tempdata$totalstep)
?hist
tempdata <- summarise(by_date,
totalstep = sum(steps, na.rm=TRUE))
View(tempdata)
View(tempdata)
?hist
hist(tempdata$totalstep,breaks="date",xlim=range(breaks))
?median
View(by_date)
View(by_date)
hist(tempdata$totalstep)
?hist
hist(tempdata$totalstep, xlab="Total number of steps taken each day")
hist(tempdata$totalstep, xlab="Total number of steps taken each day", main = "Histogram of the total number of steps taken each day")
View(data)
View(data)
?tapply
tapply(data$steps,data$interval,mean)
tapply(data$steps,data$interval,mean,na.rm=TRUE)
aa <- tapply(data$steps,data$interval,mean,na.rm=TRUE)
class(aa)
aa[1]
name(aa[1])
by_interval <- group_by(data,interval)
tempdata2 <- summarise(by_interval,meanstep = mean(steps,na.rm=TRUE)
)
View(tempdata2)
View(tempdata2)
data_by_interval <- summarise(by_interval, meanstep = mean(steps,na.rm=TRUE))
plot(data_by_interval,type="l")
?plot
plot(data_by_interval,type="l", xlab="Time Interval", ylab="average number of steps taken")
View(data_by_interval)
View(data_by_interval)
plot(1:288,data_by_interval)
plot(1:288,data_by_interval$interval)
data_by_interval$interval
intToHHMM <- function (i) {  sprintf("%02d:%02d", i %/% 100, i %% 100)}
View(tempdata)
intToHHMM(0)
intToHHMM(5)
intToHHMM(55)
intToHHMM(100)
history()
lapply(data$interval,intToHHMM)
data$interval
data$interval <- lapply(data$interval,intToHHMM)
View(data)
View(data)
View(data)
View(data)
class(data$interval)
data$interval <- sapply(data$interval,intToHHMM)
data <- read.csv("activity.csv")
data$interval <- sapply(data$interval,intToHHMM)
class(data$interval)
View(data)
View(data)
rm(list=ls())
data <- read.csv("activity.csv")
intToHHMM <- function (i) {  sprintf("%02d:%02d", i %/% 100, i %% 100)}
data$interval <- lapply(data$interval,intToHHMM)
class(data$interval)
rm(list=ls())
?plot
?max
?select
?subset
?is.na()
data <- read.csv("activity.csv")
is.na(data)
temp <- is.na(data$steps)
num <- sum(temp==TRUE)
class(num)
tt <- data$steps[!temp]
library(dplyr)
by_date <- group_by(data,date)
data_by_date <- summarise(by_date, totalstep = sum(steps, na.rm=TRUE))
```
View(data_by_date)
View(data_by_date)
data_by_date <- summarise(by_date,
totalstep = sum(steps, na.rm=TRUE),
meanstep = mean(steps, na.rm=TRUE))
View(data_by_date)
View(data_by_date)
data_by_date <- summarise(by_date,
totalstep = sum(steps, na.rm=TRUE),
meanstep = mean(steps, na.rm=TRUE)),
median.steps = median(steps, na.rm=TRUE)
View(by_date)
View(by_date)
View(data_by_date)
View(data_by_date)
data_by_date <- summarise(by_date,
totalstep = sum(steps, na.rm=TRUE),
meanstep = mean(steps, na.rm=TRUE),
median.steps = median(steps, na.rm=TRUE))
View(data_by_date)
View(data_by_date)
View(by_date)
View(by_date)
by_interval <- group_by(data,interval)
data_by_interval <- summarise(by_interval, meanstep = mean(steps,na.rm=TRUE))
View(data_by_interval)
View(data_by_interval)
?if
else
?ifelase
?ifelse
?select
data2 <- data
data2$steps <- ifelse(is.na(data2$steps),
subset(data_by_interval,interval==interval)$meanstep,
data2$steps)
View(data2)
View(data2)
?round
data2$steps <- ifelse(is.na(data2$steps),
round(subset(data_by_interval,interval==interval)$meanstep),
data2$steps)
View(data2)
View(data2)
View(data2)
data2$steps <- ifelse(is.na(data2$steps),
round(subset(data_by_interval,interval==interval)$meanstep,digits=0),
data2$steps)
View(data2)
data2$steps <- ifelse(is.na(data2$steps),
as.integer(subset(data_by_interval,interval==interval)$meanstep),
data2$steps)
View(data2)
as.integer(data2$steps)
View(data2)
class(data2$steps)
View(data)
View(data)
data2$steps <- ifelse(is.na(data2$steps),
as.integer(subset(data_by_interval,interval==interval)$meanstep),
data2$steps)
class(data2$steps)
class(data$steps)
by_date2 <- group_by(data2,date)
View(by_date2)
View(data2)
data2 <- data
data2$steps <- ifelse(is.na(data2$steps),
subset(data_by_interval,interval==interval)$meanstep,
data2$steps)
data2$steps <- as.integer(data2$steps)
View(data2)
data2 <- data
data2$steps <- ifelse(is.na(data2$steps),
round(subset(data_by_interval,interval==interval)$meanstep),
data2$steps)
data2$steps <- as.integer(data2$steps)
View(data2)
View(by_interval)
View(data_by_interval)
?round
round(0.34)
round(0.64)
data2 <- data
data2$steps <- ifelse(is.na(data2$steps),
round(subset(data_by_interval,interval==interval)$meanstep),
data2$steps)
View(data2)
mean.steps2 <- mean(data_by_date2$totalstep, na.rm=TRUE)
by_date2 <- group_by(data2,date)
data_by_date2 <- summarise(by_date2, totalstep = sum(steps, na.rm=TRUE))
mean.steps2 <- mean(data_by_date2$totalstep, na.rm=TRUE)
mean.steps <- mean(data_by_date$totalstep, na.rm=TRUE)
median.steps <- median(data_by_date$totalstep, na.rm=TRUE)
median.steps2 <- median(data_by_date2$totalstep, na.rm=TRUE)
?mutate
class(data2$date)
as.Date(data2$date)
class(data2$date)
data2$date <- as.Date(data2$date)
View(data2)
class(data2$date)
?weekday
?weekdays
?is.weekday
weekdays(data2$date)
Sys.setlocale("LC_TIME", "English")
weekdays(data2$date)
mutate(data2,weekday=ifelse(weekdays(data2$date)>=0&<5),TRUE,FALSE))
weekdays(data2$date)
mutate(data2,weekend=ifelse(weekdays(data2$date)=="Sunday"|"Saturday"),TRUE,FALSE),weekday=!weekend)
mutate(data2,weekend=ifelse(weekdays(data2$date)=="Sunday"|"Saturday",TRUE,FALSE),weekday=!weekend)
mutate(data2,weekend=ifelse(weekdays(data2$date)=="Sunday"||"Saturday",TRUE,FALSE),weekday=!weekend)
mutate(data2,weekend=ifelse(weekdays(data2$date)==("Sunday"|"Saturday"),TRUE,FALSE),weekday=!weekend)
mutate(data2,weekend=ifelse(weekdays(data2$date)=="Sunday"|weekdays(data2$date)=="Saturday",TRUE,FALSE),weekday=!weekend)
View(data2)
mutate(data2,weekend=ifelse(weekdays(data2$date)=="Sunday"|weekdays(data2$date)=="Saturday",TRUE,FALSE),weekday=!weekend)
View(data2)
mutate(data2,
weekend = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday",TRUE,FALSE),
weekday=!weekend)
mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday")
)
View(data2)
rm(list=ls())
data <- read.csv("activity.csv")
data2 <- data
mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
library(dplyr)
mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
?weekdays
weekdays(data2$date)
View(data)
View(data2)
class(data$date)
weekdays("2012-10-01")
weekday("2012-10-01")
weekdays(data[1]$date)
weekdays(data$date[1])
weekdays(data$date(1))
weekdays(data$date(1,1))
weekdays(data$date[,1]
)
mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
data2 <- mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
data$date <- as.Date(data$date)
data2 <- mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
data2 <- data
data2 <- mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
class(data2$weekdays)
?Factor()
data2 <- mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday",Factor("weekend"),Factor("weekday"))
)
data2$weekdays <- as.Factor(ta2$weekdays)
x <- factor(c("weekday","weekend"))
x[1]
?factor
?as.factor
x
x[1]
x[2]
data2 <- mutate(data2,
weekdays = ifelse(weekdays(data2$date)=="Sunday"|
weekdays(data2$date)=="Saturday","weekend","weekday"))
data2$weekdays <- as.factor(data2$weekdays)
class(data2$weekdays)
?ggplot
ggplot(data_by_interval_new, aes(x = date, y = meanstep)) +
geom_line(col = 'Blue') + geom_point() +
ylab('Average number of steps') + xlab('Date') + ggtitle('Average steps in interval 5') +
facet_grid(weekdays ~ .)
by_interval_new <- group_by(data2,interval)
data_by_interval_new <- summarise(by_interval_new, meanstep = mean(steps,na.rm=TRUE))
ggplot(data_by_interval_new, aes(x = date, y = meanstep)) +
geom_line(col = 'Blue') + geom_point() +
ylab('Average number of steps') + xlab('Date') + ggtitle('Average steps in interval 5') +
facet_grid(weekdays ~ .)
View(data_by_interval_new)
ggplot(data_by_interval_new, aes(x = interval, y = meanstep)) +
geom_line(col = 'Blue') + geom_point() +
ylab('Average number of steps') + xlab('Date') + ggtitle('Average steps in interval 5') +
facet_grid(weekdays ~ .)
g <- gplot(data_by_interval_new, aes(x = interval, y=meanstep))
g <- ggplot(data_by_interval_new, aes(x = interval, y=meanstep))
g+geom_point(alpha=1/3)+facet_wrap(bmicat~no2dec,nrow=2,ncol=1)
names(data_by_interval_new)
g+geom_point()+facet_grid(.~weekdays,nrow=2,ncol=1)
g+geom_point()+facet_grid(.~weekdays)
View(by_interval_new)
by_interval_new <- group_by(data2,interval)
by_interval_new <- mutate(by_interval_new,
weekdays = ifelse(weekdays(by_interval_new$date)=="Sunday"|
weekdays(by_interval_new$date)=="Saturday","weekend","weekday"))
by_interval_new$weekdays <- as.factor(by_interval_new$weekdays)
data_by_interval_new <- summarise(by_interval_new, meanstep = mean(steps,na.rm=TRUE))
View(by_interval_new)
by_interval_new <- mutate(by_interval_new,
weekdays = ifelse(weekdays(by_interval_new$date)=="Sunday"|
weekdays(by_interval_new$date)=="Saturday","weekend","weekday"))
by_interval_new <- mutate(by_interval_new, weekdays = ifelse(weekdays(by_interval_new$date)=="Sunday"| weekdays(by_interval_new$date)=="Saturday","weekend","weekday"))
View(by_interval_new)
by_interval_new <- group_by(data2,interval)
data2 <- data
data2$steps <- ifelse(is.na(data2$steps),
round(subset(data_by_interval,interval==interval)$meanstep),
data2$steps)
View(data_by_interval_new)
rm(list=ls())
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
source('E:/Dropbox/study/CourseRA/5/week2/project1/test.R')
View(by_interval_new)
class(by_interval_new$date)
source('E:/Dropbox/study/CourseRA/5/week2/project1/test.R')
View(data_by_interval_new)
?mutate
View(by_interval_new)
class(by_interval_new$date)
source('E:/Dropbox/study/CourseRA/5/week2/project1/test.R')
View(by_interval_new)
weekdays(by_interval_new$date)
